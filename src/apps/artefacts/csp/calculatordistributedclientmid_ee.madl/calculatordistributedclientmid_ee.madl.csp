datatype PROCNAMES = core | monevolutive | unit1 | unit2 | unit4 | monitor | analyser | planner | executor | unit3 | unit5 | t2 | t3 | t4 | t5 | t6 | t1
channel InvR,InvP : PROCNAMES
channel I_Process,I_Hasnewplugins

MONEVOLUTIVE = I_Hasnewplugins -> InvR.t2 -> MONEVOLUTIVE
MONITOR = InvP.t2 -> I_Process -> InvR.t3 -> MONITOR
PLANNER = InvP.t4 -> I_Process -> InvR.t5 -> PLANNER
EXECUTOR = InvP.t5 -> I_Process -> InvR.t6 -> EXECUTOR





ANALYSER = InvP.t3 -> I_Process -> InvR.t4 -> ANALYSER
T1 = InvP.core -> InvR.unit1 ->InvP.core -> InvR.unit2 ->InvP.core -> InvR.unit3 ->InvP.core -> InvR.unit4 ->InvP.core -> InvR.unit5 -> T1
T2 = InvP.monevolutive -> InvR.monitor -> T2
T3 = InvP.monitor -> InvR.analyser -> T3
T4 = InvP.analyser -> InvR.planner -> T4
T5 = InvP.planner -> InvR.executor -> T5
T6 = InvP.executor -> InvR.core -> T6

calculatordistributedclientmid_ee.madl = (UNIT2 ||| UNIT3 ||| UNIT5 ||| ANALYSER ||| EXECUTOR ||| UNIT4 ||| UNIT1 ||| MONITOR ||| PLANNER ||| CORE ||| MONEVOLUTIVE)[|{|InvR,InvP|}|](T4[[InvP.analyser <- InvR.t4,InvR.planner <- InvP.t4]] ||| T5[[InvP.analyser <- InvR.t4,InvR.planner <- InvP.t4,InvP.planner <- InvR.t5,InvR.executor <- InvP.t5]] ||| T6[[InvP.analyser <- InvR.t4,InvR.planner <- InvP.t4,InvP.planner <- InvR.t5,InvR.executor <- InvP.t5,InvP.executor <- InvR.t6,InvR.core <- InvP.t6]] ||| T1[[InvP.analyser <- InvR.t4,InvR.planner <- InvP.t4,InvP.planner <- InvR.t5,InvR.executor <- InvP.t5,InvP.executor <- InvR.t6,InvR.core <- InvP.t6,InvP.core <- InvR.t1,InvR.unit1 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit2 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit3 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit4 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit5 <- InvP.t1]] ||| T2[[InvP.analyser <- InvR.t4,InvR.planner <- InvP.t4,InvP.planner <- InvR.t5,InvR.executor <- InvP.t5,InvP.executor <- InvR.t6,InvR.core <- InvP.t6,InvP.core <- InvR.t1,InvR.unit1 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit2 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit3 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit4 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit5 <- InvP.t1,InvP.monevolutive <- InvR.t2,InvR.monitor <- InvP.t2]] ||| T3[[InvP.analyser <- InvR.t4,InvR.planner <- InvP.t4,InvP.planner <- InvR.t5,InvR.executor <- InvP.t5,InvP.executor <- InvR.t6,InvR.core <- InvP.t6,InvP.core <- InvR.t1,InvR.unit1 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit2 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit3 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit4 <- InvP.t1,InvP.core <- InvR.t1,InvR.unit5 <- InvP.t1,InvP.monevolutive <- InvR.t2,InvR.monitor <- InvP.t2,InvP.monitor <- InvR.t3,InvR.analyser <- InvP.t3]])
assert calculatordistributedclientmid_ee.madl :[deadlock free]