datatype PROCNAMES = server | finvoker | marshaller | srh | t1 | t2 | t3
channel InvR,TerR,InvP,TerP : PROCNAMES
channel I_Process,I_Beforeunmarshalling,I_Beforeserver,I_Beforemarshalling,I_Beforesend,I_Accept,I_Receive,I_Send
SERVER = InvP.t3 -> I_Process -> TerP.t3 -> SERVER
FINVOKER = InvP.t1 -> I_Beforeunmarshalling -> InvR.t2 -> TerR.t2 -> I_Beforeserver -> InvR.t3 -> TerR.t3 -> I_Beforemarshalling -> InvR.t2 -> TerR.t2 -> I_Beforesend -> TerP.t1 -> FINVOKER
MARSHALLER = InvP.t2 -> I_Process -> TerP.t2 -> MARSHALLER
SRH = I_Accept -> SRHP1 
 SRHP1 = I_Accept -> SRHP1 [] I_Receive -> InvR.t1 -> TerR.t1 -> I_Send -> SRHP1

T3 = InvP.finvoker -> InvR.server-> TerR.server -> TerP.finvoker ->T3
T1 = InvP.srh -> InvR.finvoker-> TerR.finvoker -> TerP.srh ->T1
T2 = InvP.finvoker -> InvR.marshaller-> TerR.marshaller -> TerP.finvoker ->T2

naming = (SRH ||| SERVER ||| FINVOKER ||| MARSHALLER)[|{|InvP,TerP,InvR,TerR|}|](T3[[InvP.finvoker <- InvR.t3,InvR.server <- InvP.t3,TerR.server <- TerP.t3,TerP.finvoker <- TerR.t3]] ||| T1[[InvP.finvoker <- InvR.t3,InvR.server <- InvP.t3,TerR.server <- TerP.t3,TerP.finvoker <- TerR.t3,InvP.srh <- InvR.t1,InvR.finvoker <- InvP.t1,TerR.finvoker <- TerP.t1,TerP.srh <- TerR.t1]] ||| T2[[InvP.finvoker <- InvR.t3,InvR.server <- InvP.t3,TerR.server <- TerP.t3,TerP.finvoker <- TerR.t3,InvP.srh <- InvR.t1,InvR.finvoker <- InvP.t1,TerR.finvoker <- TerP.t1,TerP.srh <- TerR.t1,InvP.finvoker <- InvR.t2,InvR.marshaller <- InvP.t2,TerR.marshaller <- TerP.t2,TerP.finvoker <- TerR.t2]])
assert naming :[deadlock free]