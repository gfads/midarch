datatype PROCNAMES = ee | evolutiveMonitor | monitor | analyser | planner | executor | unit1 | unit2 | unit3 | t1 | t2 | t3 | t4 | t5 | t6
channel InvR.e1,InvP.e2,InvP.e1,InvR.e2
channel I_Analyse,I_Plan,I_EvolutiveMonitoring,I_HasNotPlugin,I_Monitor,I_AdaptUnit,I_HasPlugin,I_Execute,I_InitialiseUnit : PROCNAMES
UNIT3 = InvP.t1 -> I_InitialiseUnit -> P1 
P1 = I_Execute -> P1 [] InvP.t1 -> I_AdaptUnit -> P1
MONITOR = InvP.t2 -> I_Monitor -> InvR.t3 -> MONITOR
ANALYSER = InvP.t3 -> I_Analyse -> InvR.t4 -> ANALYSER
UNIT1 = InvP.t1 -> I_InitialiseUnit -> P1 
P1 = I_Execute -> P1 [] InvP.t1 -> I_AdaptUnit -> P1
EXECUTOR = InvP.t5 -> I_Execute -> InvR.t6 -> EXECUTOR
UNIT2 = InvP.t1 -> I_InitialiseUnit -> P1 
P1 = I_Execute -> P1 [] InvP.t1 -> I_AdaptUnit -> P1
EE = InvR.t1 -> P1 
P1 = InvP.t6 -> InvR.t1 -> P1
EVOLUTIVEMONITOR = I_EvolutiveMonitoring -> (I_HasPlugin -> InvR.t2 -> EVOLUTIVEMONITOR [] I_HasNotPlugin -> EVOLUTIVEMONITOR)
PLANNER = InvP.t4 -> I_Plan -> InvR.t5 -> PLANNER
T1 = TO T1E ASSEMT1LED AT RUNTIME
T2 = InvP.evolutiveMonitor -> InvR.monitor -> T2
T3 = InvP.monitor -> InvR.analyser -> T3
T4 = InvP.analyser -> InvR.planner -> T4
T5 = InvP.planner -> InvR.executor -> T5
T6 = InvP.executor -> InvR.ee -> T6

SenderReceiver_EE = (EE ||| EVOLUTIVEMONITOR ||| MONITOR ||| ANALYSER ||| PLANNER ||| EXECUTOR ||| UNIT1 ||| UNIT2 ||| UNIT3)[|{|InvP,InvR|}|](T5[[InvP.planner <- InvR.t5,InvR.executor <- InvR.t5]] ||| T6[[InvP.planner <- InvR.t5,InvR.executor <- InvR.t5,InvP.executor <- InvR.t6,InvR.ee <- InvR.t6]] ||| T1[[InvP.planner <- InvR.t5,InvR.executor <- InvR.t5,InvP.executor <- InvR.t6,InvR.ee <- InvR.t6]] ||| T2[[InvP.planner <- InvR.t5,InvR.executor <- InvR.t5,InvP.executor <- InvR.t6,InvR.ee <- InvR.t6,InvP.evolutiveMonitor <- InvR.t2,InvR.monitor <- InvR.t2]] ||| T3[[InvP.planner <- InvR.t5,InvR.executor <- InvR.t5,InvP.executor <- InvR.t6,InvR.ee <- InvR.t6,InvP.evolutiveMonitor <- InvR.t2,InvR.monitor <- InvR.t2,InvP.monitor <- InvR.t3,InvR.analyser <- InvR.t3]] ||| T4[[InvP.planner <- InvR.t5,InvR.executor <- InvR.t5,InvP.executor <- InvR.t6,InvR.ee <- InvR.t6,InvP.evolutiveMonitor <- InvR.t2,InvR.monitor <- InvR.t2,InvP.monitor <- InvR.t3,InvR.analyser <- InvR.t3,InvP.analyser <- InvR.t4,InvR.planner <- InvR.t4]])
assert SenderReceiver_EE :[deadlock free]