datatype PROCNAMES = mapekMonitor | unit1 | unit4 | unit5 | ee | executor | t5 | t6 | t1 | t3 | unit6 | unit2 | t2 | analyser | unit3 | t4 | planner | evolutiveMonitor 
channel I_AdaptUnit,I_HasPlugin,I_HasNotPlugin,I_Execute,I_Monitor,I_Analyse,I_Plan,I_EvolutiveMonitoring,I_InitialiseUnit
channel InvP,InvR : PROCNAMES
ANALYSER = InvP.t3 -> I_Analyse -> InvR.t4 -> ANALYSER
UNIT1 = InvP.t1 -> I_InitialiseUnit -> UNIT1P1 
UNIT1P1 = I_Execute -> UNIT1P1 [] InvP.t1 -> I_AdaptUnit -> UNIT1P1

UNIT2 = InvP.t1 -> I_InitialiseUnit -> UNIT2P1 
UNIT2P1 = I_Execute -> UNIT2P1 [] InvP.t1 -> I_AdaptUnit -> UNIT2P1

UNIT4 = InvP.t1 -> I_InitialiseUnit -> UNIT4P1 
UNIT4P1 = I_Execute -> UNIT4P1 [] InvP.t1 -> I_AdaptUnit -> UNIT4P1

UNIT5 = InvP.t1 -> I_InitialiseUnit -> UNIT5P1 
UNIT5P1 = I_Execute -> UNIT5P1 [] InvP.t1 -> I_AdaptUnit -> UNIT5P1

UNIT6 = InvP.t1 -> I_InitialiseUnit -> UNIT6P1 
UNIT6P1 = I_Execute -> UNIT6P1 [] InvP.t1 -> I_AdaptUnit -> UNIT6P1

MAPEKMONITOR = InvP.t2 -> I_Monitor -> InvR.t3 -> MAPEKMONITOR
UNIT3 = InvP.t1 -> I_InitialiseUnit -> UNIT3P1 
UNIT3P1 = I_Execute -> UNIT3P1 [] InvP.t1 -> I_AdaptUnit -> UNIT3P1

EE = InvR.t1 -> EEP1 
EEP1 = InvP.t6 -> InvR.t1 -> EEP1

EVOLUTIVEMONITOR = I_EvolutiveMonitoring -> (I_HasPlugin -> InvR.t2 -> EVOLUTIVEMONITOR [] I_HasNotPlugin -> EVOLUTIVEMONITOR)
EXECUTOR = InvP.t5 -> I_Execute -> InvR.t6 -> EXECUTOR
PLANNER = InvP.t4 -> I_Plan -> InvR.t5 -> PLANNER
T3 = InvP.mapekMonitor -> InvR.analyser -> T3
T4 = InvP.analyser -> InvR.planner -> T4
T5 = InvP.planner -> InvR.executor -> T5
T6 = InvP.executor -> InvR.ee -> T6
T1 = InvP.ee -> InvR.unit1 -> InvR.unit2 -> InvR.unit3 -> InvR.unit4 -> InvR.unit5 -> InvR.unit6 -> T1
T2 = InvP.evolutiveMonitor -> InvR.mapekMonitor -> T2

ExecutionEnvironmentMiddlewareFibonacciClient = (ANALYSER|||UNIT2|||UNIT6|||MAPEKMONITOR|||UNIT3|||EE|||UNIT1|||UNIT4|||UNIT5|||EVOLUTIVEMONITOR|||EXECUTOR|||PLANNER)
[|{|InvP,InvR|}|]
(T5[[InvP.planner <- InvR.t5,InvR.executor <- InvP.t5]]|||T6[[InvP.executor <- InvR.t6,InvR.ee <- InvP.t6]]|||T1[[InvP.ee <- InvR.t1,InvR.unit1 <- InvP.t1,InvR.unit2 <- InvP.t1,InvR.unit3 <- InvP.t1,InvR.unit4 <- InvP.t1,InvR.unit5 <- InvP.t1,InvR.unit6 <- InvP.t1]]|||T2[[InvP.evolutiveMonitor <- InvR.t2,InvR.mapekMonitor <- InvP.t2]]|||T3[[InvP.mapekMonitor <- InvR.t3,InvR.analyser <- InvP.t3]]|||T4[[InvP.analyser <- InvR.t4,InvR.planner <- InvP.t4]])
assert ExecutionEnvironmentMiddlewareFibonacciClient :[deadlock free]