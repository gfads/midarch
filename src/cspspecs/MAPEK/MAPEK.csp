datatype PROCNAMES = planner | executor | proactiveMonitor | t2 | t4 | t1 | monitor | analyser | correctiveMonitor | evolutiveMonitor | t3 
channel I_PosInvP,I_GenerateEvent
channel InvR,InvP : PROCNAMES
MONITOR = InvP.t1 -> I_PosInvP -> InvR.t2 -> MONITOR
ANALYSER = InvP.t2 -> I_PosInvP -> InvR.t3 -> ANALYSER
PLANNER = InvP.t3 -> I_PosInvP -> InvR.t4 -> PLANNER
EXECUTOR = InvP.t4 -> I_PosInvP -> EXECUTOR
CORRECTIVEMONITOR = I_GenerateEvent -> InvR.t1 -> CORRECTIVEMONITOR
EVOLUTIVEMONITOR = I_GenerateEvent -> InvR.t1 -> EVOLUTIVEMONITOR
PROACTIVEMONITOR = I_GenerateEvent -> InvR.t1 -> PROACTIVEMONITOR
T4 = InvP.planner -> InvR.executor -> T4
T1 = InvP.correctiveMonitor -> InvR.monitor -> T1 [] InvP.evolutiveMonitor -> InvR.monitor -> T1 [] InvP.proactiveMonitor -> InvR.monitor -> T1
T2 = InvP.monitor -> InvR.analyser -> T2
T3 = InvP.analyser -> InvR.planner -> T3

P1 = (EVOLUTIVEMONITOR|||PROACTIVEMONITOR|||MONITOR|||ANALYSER|||PLANNER|||EXECUTOR|||CORRECTIVEMONITOR)
[|{|InvR,InvP|}|]
(T1[[InvP.correctiveMonitor <- InvR.t1,InvR.monitor <- InvP.t1,InvP.evolutiveMonitor <- InvR.t1,InvR.monitor <- InvP.t1,InvP.proactiveMonitor <- InvR.t1,InvR.monitor <- InvP.t1]]|||T2[[InvP.monitor <- InvR.t2,InvR.analyser <- InvP.t2]]|||T3[[InvP.analyser <- InvR.t3,InvR.planner <- InvP.t3]]|||T4[[InvP.planner <- InvR.t4,InvR.executor <- InvP.t4]])
assert P1 :[deadlock free]